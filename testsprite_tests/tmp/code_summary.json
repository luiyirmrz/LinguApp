{
  "tech_stack": [
    "TypeScript",
    "React Native",
    "Expo",
    "Firebase",
    "Hono",
    "tRPC",
    "SQLite",
    "AsyncStorage",
    "NativeWind",
    "Zustand",
    "React Query"
  ],
  "features": [
    {
      "name": "Authentication API",
      "description": "User authentication system with signin, signup, and session management",
      "files": [
        "services/auth.ts",
        "services/enhancedAuthService.ts",
        "config/firebase.ts",
        "hooks/useAuth.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/auth/signin": {
            "post": {
              "summary": "User signin",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "email": {"type": "string", "format": "email"},
                        "password": {"type": "string", "minLength": 6}
                      },
                      "required": ["email", "password"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful signin",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "user": {"type": "object"},
                          "token": {"type": "string"}
                        }
                      }
                    }
                  }
                },
                "401": {"description": "Invalid credentials"},
                "500": {"description": "Server error"}
              }
            }
          },
          "/auth/signup": {
            "post": {
              "summary": "User signup",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "email": {"type": "string", "format": "email"},
                        "password": {"type": "string", "minLength": 6}
                      },
                      "required": ["name", "email", "password"]
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Successful signup"},
                "201": {"description": "User created"},
                "400": {"description": "Invalid data"},
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Languages API",
      "description": "Get supported languages for the application",
      "files": [
        "mocks/languages.ts",
        "constants/i18n.ts",
        "services/unifiedDataService.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Languages API",
          "version": "1.0.0"
        },
        "paths": {
          "/languages": {
            "get": {
              "summary": "Get supported languages",
              "responses": {
                "200": {
                  "description": "List of supported languages",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {"type": "string"},
                            "name": {"type": "string"},
                            "nativeName": {"type": "string"},
                            "flag": {"type": "string"}
                          },
                          "required": ["code", "name", "nativeName", "flag"]
                        }
                      }
                    }
                  }
                },
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Lessons API",
      "description": "Lesson management and retrieval system",
      "files": [
        "services/comprehensiveLessonManager.ts",
        "services/comprehensiveLessonGenerator.ts",
        "data/greetingsModule.ts",
        "levels/A1/greetings.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Lessons API",
          "version": "1.0.0"
        },
        "paths": {
          "/lessons": {
            "get": {
              "summary": "Get lessons by level and language",
              "parameters": [
                {
                  "name": "level",
                  "in": "query",
                  "required": true,
                  "schema": {"type": "string", "enum": ["A1", "A2", "B1", "B2", "C1", "C2"]}
                },
                {
                  "name": "language",
                  "in": "query",
                  "required": true,
                  "schema": {"type": "string"}
                }
              ],
              "responses": {
                "200": {
                  "description": "List of lessons",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {"type": "object"}
                      }
                    }
                  }
                },
                "400": {"description": "Invalid parameters"},
                "500": {"description": "Server error"}
              }
            }
          },
          "/lessons/{lessonId}/start": {
            "post": {
              "summary": "Start a lesson",
              "parameters": [
                {
                  "name": "lessonId",
                  "in": "path",
                  "required": true,
                  "schema": {"type": "string"}
                }
              ],
              "responses": {
                "200": {"description": "Lesson started"},
                "404": {"description": "Lesson not found"},
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Gamification API",
      "description": "XP, achievements, leaderboards, and gamification features",
      "files": [
        "services/gamification.ts",
        "services/enhancedGamificationService.ts",
        "services/socialSystem.ts",
        "hooks/useGamification.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Gamification API",
          "version": "1.0.0"
        },
        "paths": {
          "/gamification/state": {
            "get": {
              "summary": "Get user gamification state",
              "responses": {
                "200": {
                  "description": "User gamification data",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "level": {"type": "number"},
                          "totalXP": {"type": "number"},
                          "streak": {"type": "number"},
                          "achievements": {"type": "array"}
                        }
                      }
                    }
                  }
                },
                "500": {"description": "Server error"}
              }
            }
          },
          "/achievements": {
            "get": {
              "summary": "Get user achievements",
              "responses": {
                "200": {
                  "description": "List of achievements",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {"type": "object"}
                      }
                    }
                  }
                },
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Speech Services API",
      "description": "Text-to-speech and speech-to-text functionality",
      "files": [
        "services/elevenLabs.ts",
        "services/speechToText.ts",
        "components/PronunciationFeedback.tsx",
        "components/STTExample.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Speech Services API",
          "version": "1.0.0"
        },
        "paths": {
          "/speech/tts": {
            "post": {
              "summary": "Text-to-speech synthesis",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "text": {"type": "string"},
                        "voice": {"type": "string"},
                        "language": {"type": "string"}
                      },
                      "required": ["text"]
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Audio generated"},
                "400": {"description": "Invalid request"},
                "500": {"description": "Server error"}
              }
            }
          },
          "/speech/stt": {
            "post": {
              "summary": "Speech-to-text conversion",
              "requestBody": {
                "required": true,
                "content": {
                  "multipart/form-data": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "audio": {"type": "string", "format": "binary"},
                        "language": {"type": "string"}
                      },
                      "required": ["audio"]
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Transcription result",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "transcript": {"type": "string"},
                          "confidence": {"type": "number"}
                        }
                      }
                    }
                  }
                },
                "400": {"description": "Invalid audio"},
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "User Settings API",
      "description": "User language preferences and settings management",
      "files": [
        "services/unifiedDataService.ts",
        "hooks/useLanguageSelector.tsx",
        "components/EnhancedLanguageSelector.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "User Settings API",
          "version": "1.0.0"
        },
        "paths": {
          "/user/settings/language": {
            "put": {
              "summary": "Update user language settings",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "nativeLanguage": {"type": "string"},
                        "targetLanguage": {"type": "string"},
                        "learningLevel": {"type": "string"}
                      }
                    }
                  }
                }
              },
              "responses": {
                "200": {"description": "Settings updated"},
                "400": {"description": "Invalid settings"},
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Analytics API",
      "description": "Learning analytics and progress tracking",
      "files": [
        "services/analytics.ts",
        "components/ErrorAnalyticsDashboard.tsx",
        "hooks/useAnalytics.tsx"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Analytics API",
          "version": "1.0.0"
        },
        "paths": {
          "/analytics/progress": {
            "get": {
              "summary": "Get user learning progress",
              "responses": {
                "200": {
                  "description": "Progress data",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "daily": {"type": "array"},
                          "weekly": {"type": "array"},
                          "insights": {"type": "array"}
                        }
                      }
                    }
                  }
                },
                "500": {"description": "Server error"}
              }
            }
          }
        }
      }
    }
  ]
}